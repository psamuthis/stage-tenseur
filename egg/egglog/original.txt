(with-dynamic-cost
 	(datatype Tensor
              (T3Const i64 i64 i64)
              (T4Const i64 i64 i64 i64)
              (T5Const i64 i64 i64 i64 i64)
    )
)
(function dim1 (Tensor) i64 :no-merge)
(function dim2 (Tensor) i64 :no-merge)
(function dim3 (Tensor) i64 :no-merge)

(with-dynamic-cost 
    (datatype Matrix
        (MConst i64 i64)
        (Unfold Tensor i64)
        (MAdd Matrix Matrix)
        (MMul Matrix Matrix)
        (Kron Matrix Matrix)
        (Krao Matrix Matrix)
        (Hdmr Matrix Matrix)
		(VMMul Matrix Matrix)
        (MT Matrix)
    )
)
(function row (Matrix) i64 :no-merge)
(function col (Matrix) i64 :no-merge)
(function Fold3 (Matrix i64 i64 i64 i64) Tensor :no-merge)

;; MATRIX RULES
;; MATRIX RULES
;; MATRIX RULES
(rule (
    (= x (MConst r c))
) (
    (set (row x) r)
    (set (col x) c)
))
;; MMUL
(rule (
    (= x (MMul y z))
    (= r (row y))
    (= (col y) (row z))
    (= c (col z))
) (
    (set (row x) r)
    (set (col x) c)
))
;; ADD
(rule (
       (= x (MAdd y z))
       (= (col y) (col z))
       (= (row y) (row z))
       (= r (row y))
       (= c (col y)))
      ((set (row x) r)
   	   (set (col x) c)
))
;; KRONECKER
(rule 
	((= x (Kron y z))
       (= r1 (row y))
       (= r2 (row z))
       (= c1 (col y))
       (= c2 (col z)))
 	((set (row x) (* r1 r2))
     (set (col x) (* c1 c2)))
)
;; KHATRI-RAO
(rule
 	((= x (Krao y z))
     (= (col y) (col z))
     (= r (* (row y) (row z)))
     (= c (col y)))
 	((set (row x) r)
     (set (col x) c))
)
;; HADAMARD
(rule
 ((= x (Hdmr y z))
  (= (row y) (row z))
  (= (col y) (col z))
  (= r (row y))
  (= c (col y)))
 ((set (row x) r)
  (set (col x) c)))
;; VECTOR-MATRIX MUL
(rule
 ((= x (VMMul v m))
  (= (col v) (row m))
  (= c (col m))
  (= (row v) 1))
 ((set (row x) 1)
  (set (col x) c)))
;; TRANSPOSE
(rule
 	((= t (MT m))
 	(= r (row m))
 	(= c (col m)))
 	((set (row t) c)
     (set (col t) r)))

;; TENSOR RULES
;; TENSOR RULES
;; TENSOR RULES
(rule
 	((= m (Unfold (T3Const i j k) 0)))
 ((set (row m) i)
  (set (col m) (* j k))))

(rule
 	((= m (Unfold (T3Const i j k) 1)))
 ((set (row m) j)
  (set (col m) (* i k))))

(rule
 	((= m (Unfold (T3Const i j k) 2)))
 ((set (row m) k)
  (set (col m) (* i j))))

(rule
 	((= t (Fold3 mat x y z 0))
     (= (row mat) x)
     (= (col mat) (* y z)))
 ((set (dim1 t) x)
  (set (dim2 t) y)
  (set (dim3 t) z)))

;; Unfold 4D
(rule
  ((= m (Unfold (T4Const i j k l) 0)))
  ((set (row m) i)
   (set (col m) (* j (* k l)))))

(rule
  ((= m (Unfold (T4Const i j k l) 1)))
  ((set (row m) j)
   (set (col m) (* i (* k l)))))

(rule
  ((= m (Unfold (T4Const i j k l) 2)))
  ((set (row m) k)
   (set (col m) (* i (* j l)))))

(rule
  ((= m (Unfold (T4Const i j k l) 3)))
  ((set (row m) l)
   (set (col m) (* i (* j k)))))

;; Unfold 5D
(rule
  ((= mat (Unfold (T5Const i j k l m) 0)))
  ((set (row mat) i)
   (set (col mat) (* j (* k (* l m))))))

(rule
  ((= mat (Unfold (T5Const i j k l m) 1)))
  ((set (row mat) j)
   (set (col mat) (* i (* k (* l m))))))

(rule
  ((= mat (Unfold (T5Const i j k l m) 2)))
  ((set (row mat) k)
   (set (col mat) (* i (* j (* l m))))))

(rule
  ((= mat (Unfold (T5Const i j k l m) 3)))
  ((set (row mat) l)
   (set (col mat) (* i (* j (* k m))))))

(rule
  ((= mat (Unfold (T5Const i j k l m) 4)))
  ((set (row mat) m)
   (set (col mat) (* i (* j (* k l))))))

;; MATRIX COST
;; MATRIX COST
;; MATRIX COST

;; MMUL
(rule (
    (MMul y z)
    (= r (row y))
    (= m (col y))
    (= c (col z))
) (
    (set-cost (MMul y z) (* r (* m c)))
))
;; ADD
(rule (
       (MAdd y z)
       (= r (row y))
       (= c (col y)))
	((set-cost (MAdd y z) (* r c))))

;; KRON
(rule (
       (Kron y z)
       (= m1 (* (row y) (col y)))
       (= m2 (* (row z) (col z)))
	) (
       (set-cost (Kron y z) (* m1 m2))
      )
)

;; KRAO
(rule (
       (Krao y z)
       (= r (* (row y) (row z)))
       (= c (col y))
	) (
       (set-cost (Krao y z) (* c r))
      )
)
;; HADAMARD
(rule (
       (Hdmr y z)
       (= r (row y))
       (= c (row y)))
      ((set-cost (Hdmr y z) (* r c))))

;;VMMUL
(rule (
       (VMMul v m)
       (= c (col m)))
      ((set-cost (VMMul v m) c)))

;; TENSOR COST
;; TENSOR COST
;; TENSOR COST
(rule (
       (Unfold (T3Const i j k) 0)
       (= cost (* i (* j k))))
       ((set-cost (Unfold (T3Const i j k) 0) cost)))

(rule (
       (Unfold (T3Const i j k) 1)
       (= cost (* j (* i k))))
       ((set-cost (Unfold (T3Const i j k) 0) cost)))

(rule (
       (Unfold (T3Const i j k) 2)
       (= cost (* k (* i j))))
       ((set-cost (Unfold (T3Const i j k) 0) cost)))

(rule (
       (Unfold (T4Const i j k l) 0)
       (= cost (* i (* j (* k l)))))
      ((set-cost (Unfold (T4Const i j k l) 0) cost)))

(rule (
       (Unfold (T4Const i j k l) 1)
       (= cost (* j (* i (* k l)))))
      ((set-cost (Unfold (T4Const i j k l) 1) cost)))

(rule (
       (Unfold (T4Const i j k l) 2)
       (= cost (* k (* i (* j l)))))
      ((set-cost (Unfold (T4Const i j k l) 2) cost)))

(rule (
       (Unfold (T4Const i j k l) 3)
       (= cost (* l (* i (* j k)))))
      ((set-cost (Unfold (T4Const i j k l) 3) cost)))

(rule (
       (Unfold (T5Const i j k l m) 0)
       (= cost (* i (* j (* k (* l m))))))
      ((set-cost (Unfold (T5Const i j k l m) 0) cost)))

(rule (
       (Unfold (T5Const i j k l m) 1)
       (= cost (* j (* i (* k (* l m))))))
      ((set-cost (Unfold (T5Const i j k l m) 1) cost)))

(rule (
       (Unfold (T5Const i j k l m) 2)
       (= cost (* k (* i (* j (* l m))))))
      ((set-cost (Unfold (T5Const i j k l m) 2) cost)))

(rule (
       (Unfold (T5Const i j k l m) 3)
       (= cost (* l (* i (* j (* k m))))))
      ((set-cost (Unfold (T5Const i j k l m) 3) cost)))

(rule (
       (Unfold (T5Const i j k l m) 4)
       (= cost (* m (* i (* j (* k l))))))
      ((set-cost (Unfold (T5Const i j k l m) 4) cost)))

;; REWRITES
;; REWRITES
;; REWRITES
;; Addition
(birewrite (MAdd x y) (MAdd y x))
;; Multiplication
(birewrite (MMul x (MMul y z)) (MMul (MMul x y) z))
;; Kronecker
(birewrite (Kron x (Kron y z)) (Kron (Kron x y) z))
(birewrite (MT (Kron a b)) (Kron (MT a) (MT b)))
(birewrite (Kron a (MAdd b c)) (MAdd (Kron a b) (Kron a c)))
(birewrite (Kron (MAdd b c) a) (MAdd (Kron b a) (Kron c a)))
(birewrite (Kron (MAdd a b) (MAdd c d)) (MAdd (MMul a c) (MMul b d)))
(birewrite (VMMul c (Kron a b)) (Kron (VMMul c a) b))
(birewrite (Kron (VMMul c a) b) (Kron a (VMMul c b)))
; Khatri-Rao
(birewrite (Krao x (Krao y z)) (Krao (Krao x y) z))
(birewrite (Krao (MAdd y z) x) (MAdd (Krao x y) (Krao x z)))
(birewrite (MMul (MT (Krao a b)) (Krao a b)) (Hdmr (MMul (MT a) a) (MMul (MT b) b)))

;; EXPRESSIONS
;; EXPRESSIONS
;; EXPRESSIONS
;; Multiplication
;(let Mexpr (MMul (MMul (MConst 64 8) (MConst 8 256)) (MConst 256 2)))
;; Kronecker
;(let Kexpr (Kron (Kron (MConst 2 8) (MConst 2 2)) (MConst 4 1)))
;(let KTExpr (Kron (MT (MConst 4 96)) (MT (MConst 96 4))))
;(let KDistExpr (MAdd (Kron (MConst 2 3) (MConst 5 3)) (Kron (MConst 2 3) (MConst 5 3))))
;(let KronAddExpr (Kron (MAdd (MConst 2 3) (MConst 2 3)) (MAdd (MConst 4 2) (MConst 4 2))))
;(let KronVectExpr (VMMul (MConst 1 6) (Kron (MConst 3 2) (MConst 2 4))))
;(let KronVectExpr2 (Kron (VMMul (MConst 1 2) (MConst 2 3)) (MConst 2 4)))
;; Khatri-Rao
;(let Kaxpr (Krao (MConst 2 3) (Krao (MConst 4 3) (MConst 5 3))))
;(let Kaddexpr (MAdd (Krao (MConst 2 3) (MConst 5 3)) (Krao (MConst 2 3) (MConst 5 3))))
;(let KaTN (MMul (MT (Krao (MConst 3 2) (MConst 4 2))) (Krao (MConst 3 2) (MConst 4 2))))

(let Ten (T3Const 2 4 3))
(let FM1 (MConst 2 2))
(let FM2 (MConst 4 1))
(let FM3 (MConst 3 3))

(let WeightTensor (MMul (Unfold Ten 0) (MT FM1)))
(let Folded (Fold3 WeightTensor 2 4 3 0))

(run 20)

;(extract Mexpr)
;(extract Kexpr)
;(extract KTExpr)
;(extract KDistExpr)
;(extract KronAddExpr)
;(extract KronVectExpr)
;(extract KronVectExpr2)
;(extract Kaxpr)
;(extract Kaddexpr)
;(extract KaTN)
